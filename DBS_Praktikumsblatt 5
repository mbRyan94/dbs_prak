Drop Table Tours;
Drop Table Bus_Station;
Drop Table Passengers;
Drop Table Cities;

CREATE TABLE TOURS
(T_ID Integer,
P_ID Integer,
T_Date Varchar(30),
Fromm Integer,
Too Integer,
Price Integer);

Create Table Bus_Station
(BS_ID Integer,
BS_Name Varchar(30),
Cit Varchar (30));

Create Table Passengers
(P_ID Integer,
P_Name Varchar(30),
Born Varchar(30),
Gender Varchar(30));

Create Table Cities
(City Varchar(30),
Country Varchar(30),
C_ID Integer);


Insert Into Tours
Values (1,1,'30.12.14',2,3,10);

Insert Into Tours
Values (2,1,'02.01.15',5,2,9);

Insert Into Tours
Values (3,1,'31.12.14',3,4,15);

Insert Into Tours
Values (4,1,'02.01.15',4,6,20);

Insert Into Tours
Values (5,2,'02.01.15',1,5,10);

Insert Into Tours
Values (6,2,'31.12.14',5,1,23);

Insert Into Tours
Values (7,3,'20.12.14',3,2,15);

Insert Into Tours
Values (8,6,'10.01.15',1,4,20);

Insert Into Tours
Values (9,6,'10.01.15',4,5,15);

Insert Into Tours
Values (10,3,'07.01.15',3,4,20);

Insert Into Bus_Station
Values(1,'Hbf','Munich');

Insert Into Bus_Station
Values(2,'ZOB','Munich');

Insert Into Bus_Station
Values(3,'HbF','Augsburg');

Insert Into Bus_Station
Values(4,'HbF','Zurich');

Insert Into Bus_Station
Values(5,'ZOB','Berlin');

Insert Into Bus_Station
Values(6,'HbF','Berlin');


Insert Into Passengers
Values(1,'Mickey','1990','M');

Insert Into Passengers
Values(2,'Miney','1994','W');

Insert Into Passengers
Values(3,'Kitty','1997','W');

Insert Into Passengers
Values(4,'Donald','1998','M');

Insert Into Passengers
Values(5,'Donovan','1990','M');

Insert Into Passengers
Values(6,'Daisy','2001','W');


Insert Into Cities
Values ('Munich','Germany',1);

Insert Into Cities
Values ('Augsburg','Germany',2);

Insert Into Cities
Values ('Berlin','Germany',3);

Insert Into Cities
Values ('Zurich','Switzerland',4);

--Aufgabe 1

Alter Table Cities
ADD Einwohnerzahl Integer;


--Aufgabe 2

ALTER TABLE table_name
DROP COLUMN Einwohnerzahl;

--Aufgabe 3
--Welcher Passagier ist wie oft in verschiedenen Städten
--eingestiegen
Select Passengers.P_NAME, Count(Tours.Fromm)
From Tours, Passengers
Where tours.P_ID = passengers.P_ID
Group by Passengers.P_Name;

--ausgestiegen
Select Passengers.P_NAME, Count(Tours.TOO)
From Tours, Passengers
Where tours.P_ID = passengers.P_ID
Group by Passengers.P_Name;

--umgestiegen
Select *--Passengers.P_NAME--, Count(Tours.TOO)
From Tours, Passengers
--Where tours.P_ID = passengers.P_ID;
Where Tours.Too IN Tours.Fromm;
--Group by Passengers.P_Name;

/*Teil von Mike ab Aufgabe 3*/

--Aufg 3 Umsteigen
--todo: Geht noch nicht
Select P_Name
From Tours t, Passengers p
Where t.P_ID = p.P_ID
and (
Select P_ID
From Tours
Where too in (Select fromm
From Tours);

Select P_ID, count(*)
From Tours
Where too in (Select fromm
From Tours)
Group by P_ID;

--Aufg5
Select P_ID, Sum(Price) as Summe
From Tours
Group by P_ID;

--Aufg6
--Ausgabe des Namens der jeweiligen Person - distinct verwendet, weil der Name sonst mehrfach angezeigt wird
Select  distinct Passengers.P_NAME
From Tours, Passengers
Where Passengers.P_ID in (Select P_ID
                 From Tours
                Where (t_date between '24.12.14' and '31.12.14' and fromm between 1 and 2) and too between 5 and 6);

--Ausgabe der P_ID
Select P_ID, t_date
From Tours
Where (t_date between '24.12.14' and '31.12.14' and fromm between 1 and 2) and too between 5 and 6;

--Aufg7

-- Frage: Kann man Munich und Augsburg iwie zusammenfassen und nur eine Zeile ausgeben?
Select Bus_Station.CITY, Count(Tours.TOO) as Ankünfte,
    Case
        When Bus_Station.CITY in ('Munich', 'Augsburg') then 'Bayern'
        When Bus_Station.CITY in 'Zurich' then 'Kanton Zürich'
        When Bus_Station.CITY in 'Berlin' then 'Berlin'
        Else 'Kein Bundesland'
    End as Bundesland
From Tours
Inner Join Bus_Station on Tours.Too = Bus_Station.BS_ID
Group by BUS_STATION.CITY
Order by Bundesland asc;

--Aufg8
--Ist hier vll was anders gefragt?
Select avg(t.price) as Durchschnittspreis
From Tours t;

--Aufg9
Select Passengers.p_name, count(Tours.p_id) as Anzahl_Fahrten,
    Case
        When count(Tours.p_id) > 5 then 'häufig'
        When count(Tours.p_id) between 2 and 5 then 'mäßig'
        When count(Tours.p_id) < 2 then 'selten'
        else 'keine Fahrten'
    End as Häufigkeit
From Tours
inner join Passengers on Passengers.P_id = Tours.P_id
Group by Passengers.p_name
Order by Anzahl_Fahrten desc;

--Aufg10
--Klappt, aber es ist noch eine Spalte (B_id) mit drin.
--Frage: Wie kann ich Gruppieren, wenn ich diese Spalte rauslasse?
Create View Bus_Fahrgäste as
Select BUS_STATION.BS_ID, count(Tours.fromm) as Anzahl_Passagiere,
    Case
        When Bus_Station.BS_Id = 1 then 'HBF München'
        When Bus_Station.BS_Id = 2 then 'ZOB München'
        When Bus_Station.BS_Id = 3 then 'HBF Augsburg'
        When Bus_Station.BS_Id = 4 then 'HBF Zürich'
        When Bus_Station.BS_Id = 5 then 'ZOB Berlin'
        When Bus_Station.BS_Id = 6 then 'HBF Berlin'
        Else 'Kein Bahnhof'
    End as Bus_Stationen
From Tours, Bus_Station
Where Tours.FROMM = Bus_Station.BS_ID
Group by BUS_STATION.BS_ID;
--Anzeigen der neuen View
Select *
From BUS_FAHRGÄSTE;

--Aufg11
Select count(Passengers.BORN), Gender
From Passengers
Where 2017 - Passengers.born < 18
Group by Gender;

--Aufg12
--Teilschritt: Alle, die am selben Tag 2mal gefahren sind
--todo: noch nicht fertig
Select t.t_date, P_id
From Tours t
Group by t.t_date, P_id
Having count(t.t_date) > 1
;
